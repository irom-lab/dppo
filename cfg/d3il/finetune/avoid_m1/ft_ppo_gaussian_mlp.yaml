defaults:
  - _self_
hydra:
  run:
    dir: ${logdir}
_target_: agent.finetune.train_ppo_gaussian_agent.TrainPPOGaussianAgent

name: ${env_name}_m1_gaussian_mlp_ta${horizon_steps}
logdir: ${oc.env:DPPO_LOG_DIR}/d3il-finetune/${name}/${now:%Y-%m-%d}_${now:%H-%M-%S}_${seed}
base_policy_path: ${oc.env:DPPO_LOG_DIR}/d3il-pretrain/m1/avoid_d56_r12_pre_gaussian_mlp_ta4/2024-07-07_01-35-48/checkpoint/state_10000.pt
normalization_path: ${oc.env:DPPO_DATA_DIR}/d3il/avoid_m1/normalization.npz

seed: 42
device: cuda:0
env_name: avoiding-m5
mode: d56_r12 # M1, desired modes 5 and 6, required modes 1 and 2
obs_dim: 4
action_dim: 2
cond_steps: 1
horizon_steps: 4
act_steps: 4

env:
  n_envs: 50
  name: ${env_name}
  max_episode_steps: 100
  reset_at_iteration: True
  save_video: False
  best_reward_threshold_for_success: 2
  save_full_observations: True
  wrappers:
    d3il_lowdim:
      normalization_path: ${normalization_path}
    multi_step:
      n_obs_steps: ${cond_steps}
      n_action_steps: ${act_steps}
      max_episode_steps: ${env.max_episode_steps}
      pass_full_observations: ${env.save_full_observations}
      reset_within_step: False

wandb:
  entity: ${oc.env:DPPO_WANDB_ENTITY}
  project: d3il-${env_name}-m1-finetune
  run: ${now:%H-%M-%S}_${name}

train:
  n_train_itr: 51
  n_critic_warmup_itr: 1
  n_steps: ${eval:'round(${env.max_episode_steps} / ${act_steps})'}
  gamma: 0.99
  actor_lr: 1e-5
  actor_weight_decay: 0
  actor_lr_scheduler:
    first_cycle_steps: 100
    warmup_steps: 10
    min_lr: 1e-5
  critic_lr: 1e-3
  critic_weight_decay: 0
  critic_lr_scheduler:
    first_cycle_steps: 100
    warmup_steps: 10
    min_lr: 1e-3
  save_model_freq: 100
  val_freq: 100 # no eval, always train mode
  force_train: True
  render:
    freq: 1
    num: 10
  plotter:
    _target_: env.plot_traj.TrajPlotter
    env_type: avoid
    normalization_path: ${normalization_path}
  # PPO specific
  reward_scale_running: True
  reward_scale_const: 1.0
  gae_lambda: 0.95
  batch_size: ${eval:'round(${train.n_steps} * ${env.n_envs} / 2)'}
  update_epochs: 10
  vf_coef: 0.5
  target_kl: 1

model:
  _target_: model.rl.gaussian_ppo.PPO_Gaussian
  clip_ploss_coef: 0.1
  randn_clip_value: 3
  network_path: ${base_policy_path}
  actor:
    _target_: model.common.mlp_gaussian.Gaussian_MLP
    mlp_dims: [256, 256, 256] # smaller MLP for less overfitting
    activation_type: ReLU
    residual_style: True
    fixed_std: 0.1
    learn_fixed_std: False
    cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}
    horizon_steps: ${horizon_steps}
    action_dim: ${action_dim}
  critic:
    _target_: model.common.critic.CriticObs
    mlp_dims: [256, 256, 256]
    residual_style: True
    cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}
  horizon_steps: ${horizon_steps}
  device: ${device}