defaults:
  - _self_
hydra:
  run:
    dir: ${logdir}
_target_: agent.finetune.train_ibrl_agent.TrainIBRLAgent

name: ${env_name}_ibrl_mlp_ta${horizon_steps}
logdir: ${oc.env:DPPO_LOG_DIR}/gym-finetune/${name}/${now:%Y-%m-%d}_${now:%H-%M-%S}_${seed}
normalization_path: ${oc.env:DPPO_DATA_DIR}/gym/${env_name}/normalization.npz
base_policy_path:
offline_dataset_path: ${oc.env:DPPO_DATA_DIR}/gym/${env_name}/train.npz

seed: 42
device: cuda:0
env_name: halfcheetah-medium-v2
obs_dim: 17
action_dim: 6
cond_steps: 1
horizon_steps: 1
act_steps: 1

env:
  n_envs: 1
  name: ${env_name}
  max_episode_steps: 1000
  reset_at_iteration: False
  save_video: False
  best_reward_threshold_for_success: 3
  wrappers:
    mujoco_locomotion_lowdim:
      normalization_path: ${normalization_path}
    multi_step:
      n_obs_steps: ${cond_steps}
      n_action_steps: ${act_steps}
      max_episode_steps: ${env.max_episode_steps}
      reset_within_step: True

wandb:
  entity: ${oc.env:DPPO_WANDB_ENTITY}
  project: ibrl-${env_name}
  run: ${now:%H-%M-%S}_${name}

train:
  n_train_itr: 300000
  n_steps: 1
  gamma: 0.99
  actor_lr: 1e-4
  actor_weight_decay: 0
  actor_lr_scheduler:
    first_cycle_steps: 1000
    warmup_steps: 10
    min_lr: 1e-4
  critic_lr: 1e-4
  critic_weight_decay: 0
  critic_lr_scheduler:
    first_cycle_steps: 1000
    warmup_steps: 10
    min_lr: 1e-4
  save_model_freq: 50000
  val_freq: 2000
  render:
    freq: 1
    num: 0
  log_freq: 200
  # IBRL specific
  batch_size: 256
  target_ema_rate: 0.01
  scale_reward_factor: 1
  critic_num_update: 5
  buffer_size: 300000
  n_eval_episode: 10
  n_explore_steps: 0
  update_freq: 2

model:
  _target_: model.rl.gaussian_ibrl.IBRL_Gaussian
  randn_clip_value: 3
  n_critics: 5
  soft_action_sample: True
  soft_action_sample_beta: 10
  network_path: ${base_policy_path}
  actor:
    _target_: model.common.mlp_gaussian.Gaussian_MLP
    mlp_dims: [256, 256, 256]
    activation_type: Mish
    fixed_std: 0.1
    cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}
    horizon_steps: ${horizon_steps}
    
  critic:
    _target_: model.common.critic.CriticObsAct
    mlp_dims: [256, 256, 256]
    activation_type: ReLU
    use_layernorm: True
    double_q: False # use ensemble
    cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}
    action_dim: ${action_dim}
    action_steps: ${act_steps}
  horizon_steps: ${horizon_steps}
  device: ${device}

offline_dataset:
  _target_: agent.dataset.sequence.StitchedSequenceQLearningDataset
  dataset_path: ${offline_dataset_path}
  horizon_steps: ${horizon_steps}
  cond_steps: ${cond_steps}
  device: ${device}
  max_n_episodes: 50